<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSearch.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAeCAYAAABe3VzdAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAABFRJREFUWEfNl/9P1VUcxtF+yL/ALX9ylL+YbjK6FVmmLCJAsjI1Evk6NQUiyLZg
        AjUtWzamRvOHLNckHD8UExZ3Y5XMwlsswgmCWaldobwTkeDivV64PD3P5UAwP+NS92P0bM+GcO5zXvec
        8z7vY9Q/0QNJGQvofNpJu2kfPUJ7aBe9j15ohv934qT30CWO5Myrjz27FYkvFmDTzt3IfvUt5O56G5sL
        KrA2sxiPr9+OB1Oy/Bx7mF5uPn5nxYnupZseeTo3uC5nF0r2H8GHn32FhtNdaO5wo7mzB87WC6hudGHP
        BzVII/iq57aBX+Y8P7eGnm+i7JeBOx+/YQd2lO5Hfcs5nO0ZhLvfh0H/KHyBIC723cSP7sFJf33WHfoS
        yemFgvyTn0+g55lI+8RQbWuT4MoPfIKTnLjrdy8Co2OQfCNB3Lg5gp88w9MAZdfP1/D+p41IySgS5CXm
        xJlY+8TQEm2rVq654wq6//Cio3cI170BXOrzoZOwZ64M3QY34e9+6cObh45h9fMvgVl1JtYeMXABv7lH
        Z07b2jvgh9btgsVqzeRvu68ih4X0cGq2IO1bRYblq1pLeZZ05rStw7dG0W4BEc6Hqr9Awgt5Aqw38ZGL
        YU5dJapWd78/dOa0rVYA4dxwuhtpeWUC7DfxkYthbt1zukqGVK0sCJ05K4Bwbv31OgrKDwhQXmSmiEwM
        8ukS1j3nJ9wAq3Wmggjn0vc+mgBcYaaITAwaUYf45lxPCPDGsACtJ5+NyyqPTgDGmikiE4M8al/qECoO
        WVeM1eTh/MPlARTtqZoAjDZTRCYGuVLZW6udLngGbyHIO8bqQp6NvzxzGVnFewWnh8XdZorIxKB9avx7
        2Vu1cteGAujs/XdFcqTuJJLY9pjZYuIjF8MW6lWStrMs1FutJp6Nv2cFv/zGQaxclyvADBNvjxh4WK8S
        XdbqrVYAM1lnr6rGiSfT8gXXRt9lou0RA5fryaRXiRq/eqsViJUFd7ypFRu3l+KhtVleR1LGJhNrrwi5
        Wk8mvUrU+NVbrYCmWtuqlRuHy0bylsLBzXm715tIe0XA+XSCnkx6lajxq7eqfalDTEBpxVStKgidOW2r
        Vk5w6fll2FJQ3sedKGZWzTtbU+438faIofPoOLpOrxI1fvVWtS91CF3Cuud0lahaTUG0aVu1coLbsO31
        YFxqTqDilY1Bb80TXaiMWWri7ZUBbaD7aYFMtf4v0kJn0JMFkZJeWCS41zKfGR2rjMFYYzJQG99NyGVm
        yJ0RIRbRK+hYOpq2vIT5+5qK3NQQHKFCHjuRCHye8Bt/XmKGzZ105rzvxmpbJwFxMHYc8viai/y3Pe0v
        EhFiKa1tnQ5ZT8ja+DZUORxm6NyJUMtobet0yIanxiErYxaboXMnQiyhta23Qx599JQZNrciVDStFfsb
        8uOVwIlEnxky9yKUYxpkbTxwbFW7+fP/QwRbTJ+ifXQ7fZ/50xRFRf0F6FCpSej8rn0AAAAASUVORK5C
        YII=
</value>
  </data>
</root>